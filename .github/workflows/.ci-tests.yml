name: CI-Tests
on:
  pull_request:
    branches:
      - 'develop'
    paths:
      - '06_project/src/**'
  push:
    branches:
      - 'feature_project_WIP'
    paths:
      - '06_project/src/**'

env:
  AWS_DEFAULT_REGION: 'eu-west-2'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TRACKING_SERVER_HOST: ${{ secrets.TRACKING_SERVER_HOST }}
  MLFLOW_BUCKET_NAME: ${{ secrets.MLFLOW_BUCKET_NAME }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  POSTGRES_DATABASE: ${{ secrets.POSTGRES_DATABASE }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        working-directory: "."
        run: pip install pipenv && pipenv install --dev

      - name: Run Unit tests
        working-directory: "06_project/tests"
        run: pipenv run pytest unittests.py

      - name: Lint
        working-directory: "."
        run: pipenv run pylint --recursive=y --rcfile=".pylintrc" ./06_project/src

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Integration Test
        working-directory: '06_project/tests'
        run: |
          . integration_test_cicd.sh

  tf-plan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: hashicorp/setup-terraform@v2

      - name: TF plan
        id: plan
        working-directory: '06_project/src/infrastructure'
        run: |
          terraform init -backend-config="key=mlops-zoomcamp-prod.tfstate" --reconfigure && terraform plan --var-file vars/prod.tfvars
